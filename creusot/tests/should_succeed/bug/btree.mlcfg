module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
  type core_option_option 't =
    | Core_Option_Option_None
    | Core_Option_Option_Some 't
    
  type core_ptr_nonnull_nonnull 't =
    | Core_Ptr_NonNull_NonNull opaque_ptr
    
  type core_mem_manuallydrop_manuallydrop 't =
    | Core_Mem_ManuallyDrop_ManuallyDrop 't
    
  type core_mem_maybeuninit_maybeuninit 't =
    | Core_Mem_MaybeUninit_MaybeUninit () (core_mem_manuallydrop_manuallydrop 't)
    
  type alloc_collections_btree_node_internalnode 'k 'v =
    | Alloc_Collections_Btree_Node_InternalNode (alloc_collections_btree_node_leafnode 'k 'v) (rust_array (Core_Mem_MaybeUninit_MaybeUninit.core_mem_maybeuninit_maybeuninit (core_ptr_nonnull_nonnull (alloc_collections_btree_node_leafnode 'k 'v))))
    with alloc_collections_btree_node_leafnode 'k 'v =
    | Alloc_Collections_Btree_Node_LeafNode (core_option_option (core_ptr_nonnull_nonnull (alloc_collections_btree_node_internalnode 'k 'v))) (Core_Mem_MaybeUninit_MaybeUninit.core_mem_maybeuninit_maybeuninit uint16) uint16 (rust_array (Core_Mem_MaybeUninit_MaybeUninit.core_mem_maybeuninit_maybeuninit 'k)) (rust_array (Core_Mem_MaybeUninit_MaybeUninit.core_mem_maybeuninit_maybeuninit 'v))
    
  type core_marker_phantomdata 't =
    | Core_Marker_PhantomData
    
  type alloc_collections_btree_node_noderef 'borrowtype 'k 'v 'type' =
    | Alloc_Collections_Btree_Node_NodeRef usize (core_ptr_nonnull_nonnull (alloc_collections_btree_node_leafnode 'k 'v)) (core_marker_phantomdata ('borrowtype, 'type'))
    
  type alloc_collections_btree_node_marker_owned  =
    
  type alloc_collections_btree_node_marker_leaforinternal  =
    
  type alloc_collections_btree_map_btreemap 'k 'v =
    | Alloc_Collections_Btree_Map_BTreeMap (core_option_option (alloc_collections_btree_node_noderef (alloc_collections_btree_node_marker_owned) 'k 'v (alloc_collections_btree_node_marker_leaforinternal))) usize
    
end
module Alloc_Collections_Btree_Map_Impl14_Get_Interface
  type k
  type v
  type q
  use prelude.Prelude
  use Type
  val get [@cfg:stackify] (self : Type.alloc_collections_btree_map_btreemap k v) (key : q) : Type.core_option_option v
    requires {false}
    
end
module Alloc_Collections_Btree_Map_Impl14_Get
  type k
  type v
  type q
  use prelude.Prelude
  use Type
  val get [@cfg:stackify] (self : Type.alloc_collections_btree_map_btreemap k v) (key : q) : Type.core_option_option v
    requires {false}
    
end
module Btree_Btree_Interface
  use prelude.Prelude
  use Type
  use mach.int.Int
  use mach.int.UInt64
  val btree [@cfg:stackify] (b : Type.alloc_collections_btree_map_btreemap usize bool) : ()
end
module Btree_Btree
  use mach.int.Int
  use prelude.Prelude
  use mach.int.UInt64
  let constant promoted0  : usize =
    let _1 = (0 : usize) in let _0 = _1 in _0
  use Type
  clone Alloc_Collections_Btree_Map_Impl14_Get_Interface as Get0 with type k = usize, type v = bool, type q = usize
  let rec cfg btree [@cfg:stackify] [#"../btree.rs" 3 0 36] (b : Type.alloc_collections_btree_map_btreemap usize bool) : ()
    
   =
  var _0 : ();
  var b_1 : Type.alloc_collections_btree_map_btreemap usize bool;
  var _2 : Type.core_option_option bool;
  var _3 : Type.alloc_collections_btree_map_btreemap usize bool;
  var _4 : usize;
  var _5 : usize;
  var _6 : usize;
  var _7 : usize;
  {
    b_1 <- b;
    goto BB0
  }
  BB0 {
    _3 <- b_1;
    _7 <- promoted0;
    _5 <- _7;
    _4 <- _5;
    _2 <- ([#"../btree.rs" 4 2 11] Get0.get _3 _4);
    goto BB1
  }
  BB1 {
    _0 <- ();
    return _0
  }
  
end
