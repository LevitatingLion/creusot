<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.14" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hashmap.mlcfg"/>
<theory name="Hashmap_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="556"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="0"><result status="valid" time="0.20" steps="76236"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Add" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="84"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="353"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="458"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="743298"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="91"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="91"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="91"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="652"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="158"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.33" steps="58718"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.41" steps="14962"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="9573"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="17824"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="479"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.34" steps="58545"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.32" steps="73038"/></proof>
  </goal>
  <goal name="add&#39;vc.20" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="344"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="279"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="211"/></proof>
  </goal>
  <goal name="add&#39;vc.23" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.36" steps="66084"/></proof>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.24.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.20" steps="836507"/></proof>
   </goal>
   <goal name="add&#39;vc.24.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="172"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.25" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.25.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.40" steps="81342"/></proof>
   </goal>
   <goal name="add&#39;vc.25.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.45" steps="12886"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl2_HashLog_Impl" proved="true">
 <goal name="hash_log&#39;vc" expl="VC for hash_log" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="27"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2_Hash" proved="true">
 <goal name="hash&#39;vc" expl="VC for hash" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="74"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2_HashLogEqModel_Impl" proved="true">
 <goal name="hash_log_eq_model&#39;vc" expl="VC for hash_log_eq_model" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2" proved="true">
 <goal name="Hash1.hash&#39;refn&#39;vc" expl="VC for hash&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="hash_log_spec" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="hash_log_eq_model_spec" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Main" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="134"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Resize" proved="true">
 <goal name="resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="61"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="73"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="183"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="67"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="43"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="43"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="48"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="resize&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="131"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1489"/></proof>
  </goal>
  <goal name="resize&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="93"/></proof>
  </goal>
  <goal name="resize&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="134"/></proof>
  </goal>
  <goal name="resize&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="182"/></proof>
  </goal>
  <goal name="resize&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="184"/></proof>
  </goal>
  <goal name="resize&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="485"/></proof>
  </goal>
  <goal name="resize&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="327"/></proof>
  </goal>
  <goal name="resize&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="352"/></proof>
  </goal>
  <goal name="resize&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="164"/></proof>
  </goal>
  <goal name="resize&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="170"/></proof>
  </goal>
  <goal name="resize&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.29" steps="52767"/></proof>
  </goal>
  <goal name="resize&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="1021"/></proof>
  </goal>
  <goal name="resize&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.22" steps="53807"/></proof>
  </goal>
  <goal name="resize&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="247"/></proof>
  </goal>
  <goal name="resize&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="1751"/></proof>
  </goal>
  <goal name="resize&#39;vc.25" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="208"/></proof>
  </goal>
  <goal name="resize&#39;vc.26" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="292337"/></proof>
  </goal>
  <goal name="resize&#39;vc.27" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="198"/></proof>
  </goal>
  <goal name="resize&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="227"/></proof>
  </goal>
  <goal name="resize&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="203"/></proof>
  </goal>
  <goal name="resize&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="349"/></proof>
  </goal>
  <goal name="resize&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="144"/></proof>
  </goal>
  <goal name="resize&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="144"/></proof>
  </goal>
  <goal name="resize&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="146"/></proof>
  </goal>
  <goal name="resize&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="149"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl0" proved="true">
 <goal name="Clone1.clone&#39;&#39;refn&#39;vc" expl="VC for clone&#39;&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
 </goal>
</theory>
</file>
</why3session>
