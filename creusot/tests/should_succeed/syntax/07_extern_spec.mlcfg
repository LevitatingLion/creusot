module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use set.Set
  use prelude.Prelude
end
module C07ExternSpec_Impl0_Func_Interface
  use prelude.Prelude
  val func [@cfg:stackify] (self : ()) (_2' : ()) : bool
end
module C07ExternSpec_Impl0_Func
  use prelude.Prelude
  let rec cfg func [@cfg:stackify] [#"../07_extern_spec.rs" 11 4 11 34] (self : ()) (_2' : ()) : bool =
  var _0 : bool;
  var self_1 : ();
  var _2 : ();
  {
    self_1 <- self;
    _2 <- _2';
    goto BB0
  }
  BB0 {
    _0 <- true;
    return _0
  }
  
end
module C07ExternSpec_UseSelf_Func_Interface
  type self
  use prelude.Prelude
  val func [@cfg:stackify] (self : self) (rhs : self) : bool
end
module C07ExternSpec_UseSelf_Func
  type self
  use prelude.Prelude
  val func [@cfg:stackify] (self : self) (rhs : self) : bool
end
module C07ExternSpec_Impl0
  clone C07ExternSpec_Impl0_Func_Interface as Func0
  clone C07ExternSpec_UseSelf_Func_Interface as Func1 with type self = (), val func = Func0.func
end
